name: Build Jenkins AMI

on:
  push:
    branches:
      - main

jobs:
  buildAmi:
    if: github.repository == 'RamaRaju-personal-org/ami-jenkins' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    env:
          AWS_REGION: ${{ secrets.AWS_REGION }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          JENKINS_HOME: /var/lib/jenkins


    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      
      - name: Install unzip
        run: sudo apt install unzip -y

      - name: Install AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ secrets.AWS_REGION }}

      - name: Install kubectl and AWS IAM Authenticator
        run: |
          sudo apt-get update
          sudo curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          sudo chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin
          sudo curl -Lo aws-iam-authenticator "https://github.com/kubernetes-sigs/aws-iam-authenticator/releases/download/v0.6.11/aws-iam-authenticator_0.6.11_linux_amd64"
          sudo chmod +x ./aws-iam-authenticator
          sudo mv ./aws-iam-authenticator /usr/local/bin
          echo "Kubectl $(kubectl version --client)"
          echo "AWS IAM Authenticator $(aws-iam-authenticator version)"

      - name: Update kubeconfig for EKS cluster
        run: |
          mkdir -p $JENKINS_HOME/.kube
          aws eks update-kubeconfig --name ram-eks-cluster --region $AWS_REGION --kubeconfig $JENKINS_HOME/.kube/config
          sudo chown -R jenkins:jenkins $JENKINS_HOME/.kube

      - name: Validate Kubernetes Connection
        run: |
          export KUBECONFIG=$JENKINS_HOME/.kube/config
          kubectl version
          kubectl get nodes
          
      - name: Setup `packer`
        uses: hashicorp/setup-packer@main
        id: setup
        with:
          version: "latest"

      - name: Packer format
        id: fmt
        run: "packer fmt ."

      - name: Packer init
        id: init
        run: "packer init ."

      - name: Validate Packer template
        run: packer validate .
      
      - name: Prepare JCasC file to change user credientials
        run: |
          sed -i "s|ADMIN_USER|${{ secrets.JENKINS_ADMIN_USER }}|g" jenkins/jenkins.yaml
          sed -i "s|ADMIN_PASSWORD|${{ secrets.JENKINS_ADMIN_PASSWORD }}|g" jenkins/jenkins.yaml
          sed -i "s|docker_hub_username|${{ secrets.docker_hub_username }}|g" jenkins/jenkins.yaml
          sed -i "s|docker_hub_password|${{ secrets.docker_hub_password }}|g" jenkins/jenkins.yaml
          sed -i "s|jenkins_ami_git_url|${{ secrets.GIT_JENKINS_AMI_REPO_URL }}|g" jenkins/build-docker-image.groovy
          sed -i "s|git_username|${{ secrets.git_username }}|g" jenkins/jenkins.yaml
          sed -i "s|GITHUB_TOKEN|${{ secrets.GIT_TOKEN }}|g" jenkins/jenkins.yaml
          sed -i "s|\${AWS_ACCESS_KEY_ID}|${{ secrets.AWS_ACCESS_KEY_ID }}|g" jenkins/jenkins.yaml
          sed -i "s|\${AWS_SECRET_ACCESS_KEY}|${{ secrets.AWS_SECRET_ACCESS_KEY }}|g" jenkins/jenkins.yaml
          sed -i "s|\${AWS_ACCESS_KEY_ID}|${{ secrets.AWS_ACCESS_KEY_ID }}|g" scripts/install.sh
          sed -i "s|\${AWS_SECRET_ACCESS_KEY}|${{ secrets.AWS_SECRET_ACCESS_KEY }}|g" scripts/install.sh
        shell: bash

      - name: Build AMI
        run: |
           pwd
           ls -al
           packer build .
