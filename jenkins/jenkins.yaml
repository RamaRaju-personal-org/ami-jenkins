# Jenkins Configuration as Code (JCasC)
# This configuration automates the setup of Jenkins, ensuring consistent settings across different environments.

jenkins:
  # The system message to be displayed on the Jenkins dashboard. This is useful for providing status or environment-specific information to users.
  systemMessage: "Automating Jenkins Setup using Jenkins Configuration as Code"

  # Configuration for Jenkins remoting security. When enabled, it helps secure Jenkins' agent-to-master operations.
  remotingSecurity:
    enabled: true  # Ensures that remoting security is enforced, which is crucial for avoiding unauthorized command execution.

  # Configuration for the security realm. This section defines how Jenkins handles authentication.
  securityRealm:
    local:
      allowsSignup: false  # Disables new user signups from the Jenkins login screen, which is important for managing users strictly via configuration.
      users:
        # Creation of an admin user. This user will have access to configure Jenkins.
        - id: "ADMIN_USER"  # Placeholder to be replaced with GitHub secrets via GitHub Actions workflow
          name: "ADMIN_USER"
          password: "ADMIN_PASSWORD"  # Placeholder to be replaced with GitHub secrets via GitHub Actions workflow

  # Defines the authorization strategy and specifies permissions for various security roles.
  authorizationStrategy:
    globalMatrix:
      permissions:
        - "Overall/Administer:ADMIN_USER"

credentials:
  system:
    domainCredentials:
      - credentials:
          - usernamePassword:
              scope: GLOBAL
              id: "docker-hub-credentials-id"
              description: "Docker Hub Credentials"
              username: "docker_hub_username"  # Replace with your Docker Hub username or use Jenkins secrets
              password: "docker_hub_password"  # Replace with your Docker Hub password or use Jenkins secrets
      - credentials:
          - string:
              scope: GLOBAL
              id: "github-credentials-id"
              description: "GitHub Personal Access Token"
              secret: "GITHUB_TOKEN"  # Replace with your GitHub token or use Jenkins secrets

jobs:
  - file: "./build-docker-image.groovy"
  
